---
import { getCollection } from 'astro:content';
import getPostsByGroupCondition from "@utils/getPostsByGroupCondition";

const posts = await getCollection("blog");
const today = new Date();
const oneYearAgo = new Date();
oneYearAgo.setFullYear(today.getFullYear() - 1);

const months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];
const weekdays = ['一', '三', '五', '日'];

const postsByDate = getPostsByGroupCondition(posts, (post) => {
  const date = post.data.pubDatetime;
  return date.toISOString().split('T')[0];
});

// 生成日期网格数据
const weeks = [];
let currentWeek = [];
let current = new Date(oneYearAgo);

while (current <= today) {
  if (current.getDay() === 0 && currentWeek.length) {
    weeks.push(currentWeek);
    currentWeek = [];
  }
  
  const dateStr = current.toISOString().split('T')[0];
  currentWeek.push({
    date: dateStr,
    count: postsByDate[dateStr]?.length || 0
  });
  
  current.setDate(current.getDate() + 1);
}
if (currentWeek.length) weeks.push(currentWeek);

const maxCount = Math.max(...Object.values(postsByDate).map(posts => posts.length));
const levels = [0, 1, 2, 3, 4];

function getColor(count: number) {
  if (count === 0) return "#ebedf0";
  const level = Math.ceil((count / maxCount) * 4);
  const colors = ["#ffd0b6", "#ffb088", "#ff935a", "#ff7525"];
  return colors[Math.min(level - 1, 3)];
}
---

<div class="relative flex flex-col w-full max-w-full gap-1">
  <div class="grid" style="grid-template-columns: 1.5rem repeat(12, 1fr); height: 1.5rem;">
    <div></div>
    {months.map(month => (
      <div class="text-[0.65rem] text-gray-400 text-center">{month}</div>
    ))}
  </div>

  <div class="grid" style="grid-template-columns: 1.5rem 1fr;">
    <div class="flex flex-col justify-between h-[7rem]">
      {weekdays.map(day => (
        <div class="text-[0.65rem] text-gray-400 text-center">{day}</div>
      ))}
    </div>

    <div class="grid gap-[1px]" style="grid-template-columns: repeat(53, 1fr);">
      {weeks.map(week => (
        <div class="grid gap-[1px]" style="grid-template-rows: repeat(7, 1fr);">
          {week.map(day => (
            <div
              class="h-full w-full min-h-[10px] rounded-[1px]"
              style={`background-color: ${getColor(day.count)}`}
              title={`${day.date}: ${day.count} posts`}
            />
          ))}
        </div>
      ))}
    </div>
  </div>

  <div class="flex items-center gap-2 text-[0.65rem] text-gray-400 mt-1">
    <span>Less</span>
    {levels.map(level => (
      <div
        class="w-[8px] h-[8px] rounded-[1px]"
        style={`background-color: ${getColor(level)}`}
      />
    ))}
    <span>More</span>
  </div>
</div>