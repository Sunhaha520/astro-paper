---
import { getCollection } from "astro:content";
import { SITE } from "@config";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import fs from "fs";
---

<Layout title={`GitHub Issues Timeline | ${SITE.title}`}>
  <Header activeNav="talk" />
  <Main pageTitle="GitHub Issues Timeline" pageDesc="Browse our GitHub Issues ...">
    <div class="timeline-wrapper">
      <div id="timeline" class="timeline"></div>
    </div>
  </Main>
  <Footer />
</Layout>

<style>
  .timeline-wrapper {
    @apply mb-14 flex flex-col justify-center;
  }
  .timeline-wrapper h1 {
    @apply text-4xl font-bold text-skin-accent;
  }
  .timeline {
    position: relative;
    padding-left: 40px;
    margin-bottom: 20px;
  }
  .timeline::before {
    content: '';
    position: absolute;
    top: 0;
    left: 10px;
    height: 100%;
    width: 2px;
    background: linear-gradient(to bottom, #007bff, #66b3ff);
    border-radius: 2px;
  }
  .timeline-item {
    position: relative;
    margin-bottom: 40px;
  }
  .timeline-item::before {
    content: '';
    position: absolute;
    top: 5px;
    left: -30px;
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background: #007bff;
    box-shadow: 0 0 0 4px #cce5ff;
    transform: translateX(-40%);
    z-index: 1;
  }
  .timeline-content {
    border: 1px solid #ddd;
    padding: 20px;
    border-radius: 8px;
    background: #fff;
    position: relative;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    width: fit-content;
    max-width: 80%;
    margin-left: -10px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  .timeline-content:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  }
  .timeline-content .timestamp {
    position: absolute;
    top: 10px;
    left: 15px;
    font-size: 12px;
    color: #777;
    font-weight: 500;
  }
  .timeline-content .labels {
    position: absolute;
    bottom: 10px;
    right: 15px;
    font-size: 12px;
  }
  .timeline-content .labels span {
    display: inline-block;
    margin-left: 5px;
    padding: 4px 8px;
    border-radius: 3px;
    color: #fff;
    font-size: 11px;
    background: #007bff;
    transition: opacity 0.3s ease;
  }
  .timeline-content .labels span:first-child {
    margin-left: 0;
  }
  .timeline-content .labels span:hover {
    opacity: 0.8;
  }
  .timeline-content .body {
    margin-top: 10px;
    font-size: 14px;
    line-height: 1.6;
    color: #333;
  }
</style>

<script client:only>
  async function fetchIssues() {
    try {
      const response = await fetch('https://api.github.com/repos/sunhaha520/shuoshuo/issues');
      if (!response.ok) {
        throw new Error('Network response was not ok ' + response.statusText);
      }
      const data = await response.json();

      const timeline = document.getElementById('timeline');
      let count = 0;

      data.forEach(issue => {
        if (issue.user.login === 'Sunhaha520' && count < 20) {
          const item = document.createElement('div');
          item.className = 'timeline-item';

          const content = document.createElement('div');
          content.className = 'timeline-content';

          const timestamp = document.createElement('div');
          timestamp.className = 'timestamp';
          timestamp.textContent = new Date(issue.created_at).toLocaleString();

          const body = document.createElement('div');
          body.className = 'body';
          body.innerHTML = marked.parse(issue.body);

          const labels = document.createElement('div');
          labels.className = 'labels';

          issue.labels.forEach(label => {
            const labelSpan = document.createElement('span');
            labelSpan.style.backgroundColor = `#${label.color}`;
            labelSpan.textContent = label.name;
            labels.appendChild(labelSpan);
          });

          content.appendChild(timestamp);
          content.appendChild(body);
          content.appendChild(labels);
          item.appendChild(content);
          timeline.appendChild(item);

          count++;
        }
      });
    } catch (error) {
      console.error('There was a problem with the fetch operation:', error);
    }
  }

  fetchIssues();
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/marked/14.1.2/marked.min.js"></script>
